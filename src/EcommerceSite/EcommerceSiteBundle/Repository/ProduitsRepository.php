<?php

namespace EcommerceSite\EcommerceSiteBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProduitsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitsRepository extends EntityRepository
{
    /**
     * Fonction permettant de trouver les produits selon la catégorie
     * @param $categorie
     * @return resultats de la requete
     */
    public function byCategorie($categorie)
    {
        $queryBuilder = $this->createQueryBuilder('u')
                             ->select('u')
                             ->where('u.categorie = :categorie')
                             ->andWhere('u.disponible = 1')      //boolean donc 1 = true donc disponible
                             ->orderBy('u.id')
                             ->setParameter('categorie', $categorie);
        return $queryBuilder->getQuery()->getResult();
    }

    /**
     * Fonction permettant de trouver tous les produits à partir de la barre de recherche
     * @param $attribut
     * @return array
     */
    public function findByAttribute($attribut)
    {
        $queryBuilder = $this->createQueryBuilder('u');
                $queryBuilder->select('u') //pas besoin de clause from car on est déjà dans les produits
                             ->where($queryBuilder->expr()->like('u.nom', ':attribut'))
                             ->andWhere('u.disponible = 1')
                             ->orderBy('u.id')
                             ->setParameter('attribut','%'.$attribut.'%');
        return $queryBuilder->getQuery()->getResult();
    }

    /**
     * Fonction renvoyant les produits dont les $id étaient dans le $ableau
     * @param $tableau
     * @return array
     */
    public function findArray($tableau)
    {
        $qb = $this->createQueryBuilder('u')
                   ->select('u')
                   ->where('u.id IN (:tableau)')
                   ->setParameter('tableau',$tableau);
        return $qb->getQuery()->getResult();
    }
}
